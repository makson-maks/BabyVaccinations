
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПериодичностьПланировщика = Перечисления.ПериодыОтображенияКалендаря.День;
	ДатаНастройкиПериодичностиОтображения = ТекущаяДата();
	ЗаполнитьДанныеОПрививках();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбработатьИзменениеПериодичностиОтображенияПланировщикаКалендаряПрививок();
	УстановитьПредставлениеТекущейПериодичности();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаКомандФормы

&НаКлиенте
Процедура СдвинутьПериодНазад(Команда)
	
	Если ПериодичностьПланировщика = ПредопределенноеЗначение("Перечисление.ПериодыОтображенияКалендаря.День") Тогда
		
		ДатаНастройкиПериодичностиОтображения = НачалоДня(ДатаНастройкиПериодичностиОтображения) - 1;
		
	ИначеЕсли ПериодичностьПланировщика = ПредопределенноеЗначение("Перечисление.ПериодыОтображенияКалендаря.Неделя") Тогда
		
		ДатаНастройкиПериодичностиОтображения = НачалоДня(НачалоНедели(ДатаНастройкиПериодичностиОтображения)) - 1;
		
	ИначеЕсли ПериодичностьПланировщика = ПредопределенноеЗначение("Перечисление.ПериодыОтображенияКалендаря.Месяц") Тогда
		
		ДатаНастройкиПериодичностиОтображения = НачалоДня(НачалоМесяца(ДатаНастройкиПериодичностиОтображения)) - 1;
		
	КонецЕсли;
	
	УстановитьПериодОтображения();
	УстановитьПредставлениеТекущейПериодичности();
	ЗаполнитьДанныеОПрививках();
	
КонецПроцедуры

&НаКлиенте
Процедура СдвинутьПериодВперед(Команда)
	
	Если ПериодичностьПланировщика = ПредопределенноеЗначение("Перечисление.ПериодыОтображенияКалендаря.День") Тогда
		
		ДатаНастройкиПериодичностиОтображения = КонецДня(ДатаНастройкиПериодичностиОтображения) + 1;
		
	ИначеЕсли ПериодичностьПланировщика = ПредопределенноеЗначение("Перечисление.ПериодыОтображенияКалендаря.Неделя") Тогда
		
		ДатаНастройкиПериодичностиОтображения = КонецДня(КонецНедели(ДатаНастройкиПериодичностиОтображения)) + 1;
		
	ИначеЕсли ПериодичностьПланировщика = ПредопределенноеЗначение("Перечисление.ПериодыОтображенияКалендаря.Месяц") Тогда
		
		ДатаНастройкиПериодичностиОтображения = КонецДня(КонецМесяца(ДатаНастройкиПериодичностиОтображения)) + 1;
		
	КонецЕсли;
	
	УстановитьПериодОтображения();	
	УстановитьПредставлениеТекущейПериодичности();
	ЗаполнитьДанныеОПрививках();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПериодичностьПланировщикаПриИзменении(Элемент)
	
	ОбработатьИзменениеПериодичностиОтображенияПланировщикаКалендаряПрививок();
	УстановитьПредставлениеТекущейПериодичности();
	ЗаполнитьДанныеОПрививках();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыФункции

&НаКлиенте
Процедура ОбработатьИзменениеПериодичностиОтображенияПланировщикаКалендаряПрививок()
	     
	УстановитьПериодОтображения();
	
	ИзменитьСвойстваПланировщика();
	
	ОбработатьШкалуВремени();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСвойстваПланировщика()
	
	Если ПериодичностьПланировщика = ПредопределенноеЗначение("Перечисление.ПериодыОтображенияКалендаря.День")
		Или ПериодичностьПланировщика = ПредопределенноеЗначение("Перечисление.ПериодыОтображенияКалендаря.Неделя") Тогда
		
		ПланировщикКалендарьПрививок.ОтображатьТекущуюДату = Истина;
		ПланировщикКалендарьПрививок.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Час;
		ПланировщикКалендарьПрививок.КратностьПериодическогоВарианта = 24;
		ПланировщикКалендарьПрививок.ОтображатьПеренесенныеЗаголовкиШкалыВремени = Ложь;
		ПланировщикКалендарьПрививок.ОтображатьПеренесенныеЗаголовки = Истина;
		
		ПланировщикКалендарьПрививок.ОтступСНачалаПереносаШкалыВремени = 8;
		ПланировщикКалендарьПрививок.ОтступСКонцаПереносаШкалыВремени = 4;
		
		Если ПериодичностьПланировщика = ПредопределенноеЗначение("Перечисление.ПериодыОтображенияКалендаря.День") Тогда
			ПланировщикКалендарьПрививок.ФорматПеренесенныхЗаголовковШкалыВремени = "ДЛФ=DD";
		Иначе
			ПланировщикКалендарьПрививок.ФорматПеренесенныхЗаголовковШкалыВремени = "ДФ='ddd, d'";
		КонецЕсли;
		
	ИначеЕсли ПериодичностьПланировщика = ПредопределенноеЗначение("Перечисление.ПериодыОтображенияКалендаря.Месяц") Тогда
		
		ПланировщикКалендарьПрививок.ОтображатьТекущуюДату = Ложь;
		ПланировщикКалендарьПрививок.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.День;
		ПланировщикКалендарьПрививок.КратностьПериодическогоВарианта = 7;
		ПланировщикКалендарьПрививок.ОтображатьПеренесенныеЗаголовкиШкалыВремени = Истина;
		ПланировщикКалендарьПрививок.ОтображатьПеренесенныеЗаголовки = Ложь;
		
		ПланировщикКалендарьПрививок.ОтступСНачалаПереносаШкалыВремени = 0;
		ПланировщикКалендарьПрививок.ОтступСКонцаПереносаШкалыВремени = 0;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьПериодОтображения()
	
	ПланировщикКалендарьПрививок.ТекущиеПериодыОтображения.Очистить();
	
	ДатаНачалаПериодичности = РаботаСПланировщикомКлиентСервер.ПолучитьДатуНачалаПериодичностиПланировщика(
		ПериодичностьПланировщика, 
		ДатаНастройкиПериодичностиОтображения);
		
	ДатаОкончанияПериодичности = РаботаСПланировщикомКлиентСервер.ПолучитьДатуОкончанияПериодичностиПланировщика(
		ПериодичностьПланировщика, 
		ДатаНастройкиПериодичностиОтображения);
		
	ПланировщикКалендарьПрививок.ТекущиеПериодыОтображения.Добавить(ДатаНачалаПериодичности, ДатаОкончанияПериодичности);

	ПланировщикКалендарьПрививок.НачалоПериодаОтображения = ДатаНачалаПериодичности;
	ПланировщикКалендарьПрививок.КонецПериодаОтображения = ДатаОкончанияПериодичности;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьШкалуВремени()
	
	Если ПериодичностьПланировщика = ПредопределенноеЗначение("Перечисление.ПериодыОтображенияКалендаря.День")
		Или ПериодичностьПланировщика = ПредопределенноеЗначение("Перечисление.ПериодыОтображенияКалендаря.Неделя") Тогда
		
		ПланировщикКалендарьПрививок.ШкалаВремени.Положение = ПоложениеШкалыВремени.Лево;
		
		ШкалаВремениЧас = ПланировщикКалендарьПрививок.ШкалаВремени.Элементы[0];
		ШкалаВремениЧас.Единица = ТипЕдиницыШкалыВремени.Час;
		ШкалаВремениЧас.Кратность = 1;
		ШкалаВремениЧас.Формат = "DF='HH:mm'";
		
	ИначеЕсли ПериодичностьПланировщика = ПредопределенноеЗначение("Перечисление.ПериодыОтображенияКалендаря.Месяц") Тогда
		
		ПланировщикКалендарьПрививок.ШкалаВремени.Положение = ПоложениеШкалыВремени.Верх;
		
		ШкалаВремени = ПланировщикКалендарьПрививок.ШкалаВремени.Элементы[0];
		ШкалаВремени.Единица = ТипЕдиницыШкалыВремени.День;
		ШкалаВремени.Кратность = 1;
		ШкалаВремени.Формат = "ДФ='ddd, d.MM'";
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПланировщикКалендарьПрививокПриСменеТекущегоПериодаОтображения(Элемент, ТекущиеПериодыОтображения, СтандартнаяОбработка)
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПредставлениеТекущейПериодичности()
	
	Если ПериодичностьПланировщика = ПредопределенноеЗначение("Перечисление.ПериодыОтображенияКалендаря.День") Тогда
		
		ПредставлениеТекущейПериодичности = Формат(ДатаНастройкиПериодичностиОтображения, "ДЛФ=DD");
		
	ИначеЕсли ПериодичностьПланировщика = ПредопределенноеЗначение("Перечисление.ПериодыОтображенияКалендаря.Неделя") Тогда
		
		ПредставлениеТекущейПериодичности = Формат(НачалоНедели(ДатаНастройкиПериодичностиОтображения), "ДЛФ=DD")
			+ " - " + Формат(КонецНедели(ДатаНастройкиПериодичностиОтображения), "ДЛФ=DD");
		
	ИначеЕсли ПериодичностьПланировщика = ПредопределенноеЗначение("Перечисление.ПериодыОтображенияКалендаря.Месяц") Тогда
		
		ПредставлениеТекущейПериодичности = Формат(ДатаНастройкиПериодичностиОтображения, "ДФ='ММММ yyyy'");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеОПрививках()
	
	ДанныеОПрививках = РаботаСПрививкамиПовтИсп.ПолучитьДанныеОПрививках(ДатаНачалаПериодичности, ДатаОкончанияПериодичности);
	
	Пока ДанныеОПрививках.Следующий() Цикл
		
		Элемент = ПланировщикКалендарьПрививок.Элементы.Добавить(НачалоДня(ДанныеОПрививках.ДатаУстановки), КонецДня(ДанныеОПрививках.ДатаУстановки));
		
		ТекстДляКалендаря = НСтр("ru = 'Для %1 поставить прививку %2'");
		ТекстДляКалендаря = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстДляКалендаря,
			ДанныеОПрививках.РебенокПредставление,
			ДанныеОПрививках.ПрививкаПредставление);
		
		Элемент.Текст = ТекстДляКалендаря;

	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти