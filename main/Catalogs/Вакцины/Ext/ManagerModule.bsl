
#Область ПрограммныйИнтерфейс

Функция СформироватьДанныеВакцин() Экспорт
	
	СписокВакцин = Новый Соответствие;
	
	#Область АктХИБ
	
	Описание = НСтр("ru = 'это вакцина для профилактики гнойно-септических заболеваний'");
	
	ДанныеВакцины = ПолучитьСтруктуруДанныхВакцин();
	ДанныеВакцины.Описание = Описание;
	ДанныеВакцины.Отечественная = Ложь;
	
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.ГемофильнаяИнфекция);
	
	СписокВакцин.Вставить(Справочники.Вакцины.АктХИБ, ДанныеВакцины);
	
	#КонецОбласти
	
	#Область Ваксигрип
	
	Описание = НСтр("ru = 'это вакцина для профилактики гриппа'");
	
	ДанныеВакцины = ПолучитьСтруктуруДанныхВакцин();
	ДанныеВакцины.Описание = Описание;
	ДанныеВакцины.Отечественная = Ложь;
	ДанныеВакцины.НетДанныхОСтоимости = Истина;
	
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.Грипп);
	
	СписокВакцин.Вставить(Справочники.Вакцины.Ваксигрип, ДанныеВакцины);
	
	#КонецОбласти
	
	#Область ГрипполПлюс
	
	Описание = НСтр("ru = 'это вакцина для профилактики гриппа'");
	
	ДанныеВакцины = ПолучитьСтруктуруДанныхВакцин();
	ДанныеВакцины.Описание = Описание;
	ДанныеВакцины.Бесплатная = Ложь;
	ДанныеВакцины.СредняяСтоимость = 1500;
	
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.Грипп);
	
	СписокВакцин.Вставить(Справочники.Вакцины.ГрипполПлюс, ДанныеВакцины);
	
	#КонецОбласти
	
	#Область ИнфанриксГекса
	
	Описание = НСтр("ru = 'является одной из самых современных, комбинированных вакцин'");
	
	ДанныеВакцины = ПолучитьСтруктуруДанныхВакцин();
	ДанныеВакцины.Описание = Описание;
	ДанныеВакцины.ТипВакциныПоКоличествуИнфекцийОтКоторыхОнаЗащищает = Перечисления.ТипыВакциныПоКоличествуИнфекцийОтКоторыхОниЗащищают.Поливакцина;
	ДанныеВакцины.Отечественная = Ложь;
	ДанныеВакцины.Бесплатная = Ложь;
	ДанныеВакцины.СредняяСтоимость = 7500;
	
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.ВирусныйГепатитВ);
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.Столбняк);
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.Дифтерия);
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.Коклюш);
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.Полиомиелит);
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.ГемофильнаяИнфекция);
	
	СписокВакцин.Вставить(Справочники.Вакцины.ИнфанриксГекса, ДанныеВакцины);
	
	#КонецОбласти
	
	#Область Пентаксим
	
	Описание = НСтр("ru = 'является комбинированной вакциной'");
	
	ДанныеВакцины = ПолучитьСтруктуруДанныхВакцин();
	ДанныеВакцины.Описание = Описание;
	ДанныеВакцины.ТипВакциныПоКоличествуИнфекцийОтКоторыхОнаЗащищает = Перечисления.ТипыВакциныПоКоличествуИнфекцийОтКоторыхОниЗащищают.Поливакцина;
	ДанныеВакцины.Отечественная = Ложь;
	ДанныеВакцины.Бесплатная = Ложь;
	ДанныеВакцины.СредняяСтоимость = 6500;
	
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.Полиомиелит);
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.ГемофильнаяИнфекция);
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.Коклюш);
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.Дифтерия);
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.Столбняк);
	
	СписокВакцин.Вставить(Справочники.Вакцины.Пентаксим, ДанныеВакцины);
	
	#КонецОбласти
	
	#Область РегевакВ
	
	Описание = НСтр("ru = 'от вирусного гепатита В'");
	
	ДанныеВакцины = ПолучитьСтруктуруДанныхВакцин();
	ДанныеВакцины.Описание = Описание;
	ДанныеВакцины.Бесплатная = Ложь;
	ДанныеВакцины.СредняяСтоимость = 2500;
	
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.ВирусныйГепатитВ);
	
	СписокВакцин.Вставить(Справочники.Вакцины.РегевакВ, ДанныеВакцины);
	
	#КонецОбласти
	
	#Область Ультрикс
	
	Описание = НСтр("ru = 'это вакцина для профилактики гриппа'");
	
	ДанныеВакцины = ПолучитьСтруктуруДанныхВакцин();
	ДанныеВакцины.Описание = Описание;
	ДанныеВакцины.Бесплатная = Ложь;
	ДанныеВакцины.СредняяСтоимость = 1500;
	
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.Грипп);
	
	СписокВакцин.Вставить(Справочники.Вакцины.Ультрикс, ДанныеВакцины);
	
	#КонецОбласти
	
	#Область Флюарикс
	
	Описание = НСтр("ru = 'это вакцина для профилактики гриппа'");
	
	ДанныеВакцины = ПолучитьСтруктуруДанныхВакцин();
	ДанныеВакцины.Описание = Описание;
	ДанныеВакцины.Отечественная = Ложь;
	ДанныеВакцины.Бесплатная = Ложь;
	ДанныеВакцины.СредняяСтоимость = 1500;
	
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.Грипп);
	
	СписокВакцин.Вставить(Справочники.Вакцины.Флюарикс, ДанныеВакцины);
	
	#КонецОбласти
	
	#Область Хиберикс
	
	Описание = НСтр("ru = 'это вакцина для профилактики гнойно-септических заболеваний'");
	
	ДанныеВакцины = ПолучитьСтруктуруДанныхВакцин();
	ДанныеВакцины.Описание = Описание;
	ДанныеВакцины.Отечественная = Ложь;
	ДанныеВакцины.Бесплатная = Ложь;
	ДанныеВакцины.СредняяСтоимость = 3500;
	
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.ГемофильнаяИнфекция);
	
	СписокВакцин.Вставить(Справочники.Вакцины.Хиберикс, ДанныеВакцины);
	
	#КонецОбласти
	
	#Область ЭнджериксВ
	
	Описание = НСтр("ru = 'от вирусного гепатита В'");
	
	ДанныеВакцины = ПолучитьСтруктуруДанныхВакцин();
	ДанныеВакцины.Описание = Описание;
	ДанныеВакцины.Отечественная = Ложь;
	ДанныеВакцины.Бесплатная = Ложь;
	ДанныеВакцины.СредняяСтоимость = 2000;
	
	ДанныеВакцины.Инфекции.Добавить(Справочники.Инфекции.ВирусныйГепатитВ);
	
	СписокВакцин.Вставить(Справочники.Вакцины.ЭнджериксВ, ДанныеВакцины);
	
	#КонецОбласти
	
	Возврат СписокВакцин;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыФункции

Функция ПолучитьСтруктуруДанныхВакцин()
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Описание");
	СтруктураДанных.Вставить("ТипВакциныПоКоличествуИнфекцийОтКоторыхОнаЗащищает", Перечисления.ТипыВакциныПоКоличествуИнфекцийОтКоторыхОниЗащищают.Моновакцина);
	СтруктураДанных.Вставить("СредняяСтоимость");
	СтруктураДанных.Вставить("Бесплатная", Истина);
	СтруктураДанных.Вставить("Отечественная", Истина);
	СтруктураДанных.Вставить("НетДанныхОСтоимости", Ложь);
	СтруктураДанных.Вставить("Инфекции", Новый Массив);
	
	Возврат СтруктураДанных; 
	
КонецФункции

#КонецОбласти